# 로봇 청소기

# 1차
# 시작 시간 : 02/25 20:40
# 종료 시간 : 02/25 21:40 실패

# 2차
# 시작 시간 : 02/26 11:45
# 종료 시간 : 02/26 12:45 실패

# ===== 인풋 =====
# 방 크기
N, M = map(int, input().split())

# 로봇의 초기 위치 및 델타 탐색 시작 방향
I, J, D = map(int, input().split())

# 방 상태
arr = [list(map(int, input().split())) for _ in range(M)]
# ===== 인풋 끝 =====


# 회전 방향은 반시계,,, 반시계 .... 북 동 남 서...
di = [-1, 0, 1, 0]
dj = [0, 1, 0, -1]

# 기본 위치와 기본 탐색방향 초기화(인풋값)
i, j, d = I, J, D

# 청소 횟수 cnt
clean = 0

# 종료조건? break가 발생 할 때 까지 가야하나?
# 한 칸씩 후진하면서 상하좌우를 살폈을 때 0이 아니라면 계속 후진하다가 1을 만난다. 그럼 종료되겠네. 굿
while True:
    # 이동한 지점이 0 인 경우는 청소 실시 후 -1 로 변경 (중복 청소 방지)
    if arr[i][j] == 0:
        arr[i][j] = -1
        clean += 1

        # 청소를 했으면 방향 탐색하기 (반시계로)
        for _ in range(4):
            # 3, 2, 1, 0 순서로
            d = (d-1) % 4
            ni = i + di[d]
            nj = j + dj[d]
            # 유효하고 해당 칸이 0 일 경우 전진
            if (0 <= ni < M) and (0 <= nj < N) and arr[ni][nj] == 0:
                i, j = ni, nj
                # 전진 했으니 1번으로 돌아간다.
                break

            # 유효하지만 0이 아닌 경우 (현재 칸 기준 청소되지 않은 빈 칸이 없는 경우)
            elif (0 <= ni < M) and (0 <= nj < N) and arr[ni][nj] != 0:
                # 후진한다.
                ni = i - di[d]
                nj = i - dj[d]
                # 후진한 값이 유효하면서 1이랑 같다면
                if (0 <= ni < M) and (0 <= nj < N) and arr[ni][nj] == 1:



print(clean)